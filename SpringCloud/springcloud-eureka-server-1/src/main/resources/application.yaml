# Tomcat 端口
server:
  port: 7001

# application 必须一致
spring:
  boot:
    admin:
      client:
        url: http://localhost:8080
  application:
    name: eureka-service
  # 增加简单的安全配置
  # security:
    # user:
      # name: admin
      # password: admin
  cloud:
    client:
      ipAddress: 192.168.58.1

eureka:
  instance:
    # hostname 是用来查找主机的, appname 是用来表示分组的
    hostname: eureka7001.com #eureka服务端的实例名称
    # Eureka注册服务列表显示 IP + 端口
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
    # 自定义元数据信息
    metadata-map:
      dalao: vance123
  client:
    # 是否将自己注册到Eureka Server,默认true.由于当前就是server，故而设置成 false，表明该服务不会向eureka注册自己的信息
    # register-with-eureka: false
    # 是否从eureka server获取注册信息，默认true. 单节点不需要同步其他节点数据，用 false
    # fetch-registry: false
    service-url:
      # defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      # eureka 所有操作都基于Restful协议, 指定eureka端口. 两台service互相注册
      # defaultZone: http://admin:admin@eureka7002.com:7002/eureka/
      defaultZone: http://eureka7002.com:7002/eureka/
  server:
    # 关闭自我保护机制，默认是true
    enable-self-preservation: false

# 开启监控信息的所有节点 *代表所有节点都加载
management:
  endpoints:
    web:
      exposure:
        include: '*'
  # 启动路由查看信息, 默认为true，可以省略
  endpoint:
    health:
      enabled: true
      show-details: always
    routes:
      enabled: true

